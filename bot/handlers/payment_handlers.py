from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from db import queries as db
import logging
from bot.handlers.user_handlers import show_profile

async def handle_subscribe(callback_query: types.CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏ - –Ω–∞–ø—Ä–∞–≤–ª—è—î –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        await callback_query.message.edit_text(
            "üíé <b>–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏</b>\n\n"
            "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ AI –∞–Ω–∞–ª—ñ–∑ —Ç–æ—Ä–≥–æ–≤–∏—Ö —É–≥–æ–¥ "
            "–∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n"
            "üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> @kicenyk\n\n"
            "üìù <b>–©–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ –ø—ñ–¥–ø–∏—Å–∫—É:</b>\n"
            "‚Ä¢ –ù–µ–æ–±–º–µ–∂–µ–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ç–æ—Ä–≥–æ–≤–∏—Ö –≥—Ä–∞—Ñ—ñ–∫—ñ–≤\n"
            "‚Ä¢ –¢–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∑ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è–º–∏\n"
            "‚Ä¢ –†—ñ–≤–Ω—ñ –≤—Ö–æ–¥—É, —Å—Ç–æ–ø-–ª–æ—Å—Å —Ç–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –ø–æ –ø–ª–µ—á—É\n"
            "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–µ –æ–±“ë—Ä—É–Ω—Ç—É–≤–∞–Ω–Ω—è –∫–æ–∂–Ω–æ—ó —É–≥–æ–¥–∏\n\n"
            "‚è∞ <b>–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó:</b> 30 –¥–Ω—ñ–≤\n\n"
            "–ù–∞–ø–∏—à—ñ—Ç—å @kicenyk –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏!",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ @kicenyk", 
                            url="https://t.me/kicenyk"
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é", 
                            callback_data="back_to_profile"
                        )
                    ]
                ]
            ),
            parse_mode="HTML"
        )
        await callback_query.answer()
        
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É: {e}")
        await callback_query.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó", show_alert=True)

async def handle_subscription_info(callback_query: types.CallbackQuery):
    """–ü–æ–∫–∞–∑—É—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É"""
    try:
        await callback_query.message.edit_text(
            "üí´ <b>–ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ AI –∞–Ω–∞–ª—ñ–∑ —É–≥–æ–¥</b>\n\n"
            "üìä <b>–©–æ –≤–∫–ª—é—á–µ–Ω–æ:</b>\n"
            "‚Ä¢ –ù–µ–æ–±–º–µ–∂–µ–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ç–æ—Ä–≥–æ–≤–∏—Ö –≥—Ä–∞—Ñ—ñ–∫—ñ–≤\n"
            "‚Ä¢ –¢–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∑ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è–º–∏\n"
            "‚Ä¢ –†—ñ–≤–Ω—ñ –≤—Ö–æ–¥—É, —Å—Ç–æ–ø-–ª–æ—Å—Å —Ç–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –ø–æ –ø–ª–µ—á—É\n"
            "‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–µ –æ–±“ë—Ä—É–Ω—Ç—É–≤–∞–Ω–Ω—è –∫–æ–∂–Ω–æ—ó —É–≥–æ–¥–∏\n\n"
            "‚è∞ <b>–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó:</b> 30 –¥–Ω—ñ–≤\n"
            "üîÑ <b>–ü–æ–Ω–æ–≤–ª–µ–Ω–Ω—è:</b> –ß–µ—Ä–µ–∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            "üí¨ <b>–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è:</b>\n"
            "–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ @kicenyk –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç–∏ @kicenyk", 
                            url="https://t.me/kicenyk"
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é", 
                            callback_data="back_to_profile"
                        )
                    ]
                ]
            ),
            parse_mode="HTML"
        )
        
        await callback_query.answer()
        
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É: {e}")
        await callback_query.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó", show_alert=True)

async def handle_back_to_profile(callback_query: types.CallbackQuery):
    """–ü–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–∑–∞–¥ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é"""
    await show_profile(callback_query)

def register_payment_handlers(dp):
    """–†–µ—î—Å—Ç—Ä—É—î –≤—Å—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–ª–∞—Ç–µ–∂—ñ–≤"""
    dp.register_callback_query_handler(handle_subscribe, text="subscribe_30_days")
    dp.register_callback_query_handler(handle_subscription_info, text="subscription_info")
    dp.register_callback_query_handler(handle_back_to_profile, text="back_to_profile") 