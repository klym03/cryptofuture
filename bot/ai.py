import openai
from config import OPENAI_API_KEY
import logging
import re

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –∫–ª—ñ—î–Ω—Ç OpenAI
client = None

def get_openai_client():
    global client
    if client is None:
        try:
            client = openai.AsyncOpenAI(
                api_key=OPENAI_API_KEY,
                timeout=60.0
            )
        except Exception as e:
            logging.error(f"–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó OpenAI –∫–ª—ñ—î–Ω—Ç–∞: {e}")
            raise
    return client

def fix_html_tags(content: str) -> str:
    """
    –í–∏–ø—Ä–∞–≤–ª—è—î –Ω–µ–∑–∞–∫—Ä–∏—Ç—ñ —Ç–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ HTML —Ç–µ–≥–∏ –≤ –∫–æ–Ω—Ç–µ–Ω—Ç—ñ
    """
    if not content:
        return content
    
    # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∏–ø—É </b</b>, </b></b>
    content = re.sub(r'</[^>]*<[^>]*>', '', content)
    
    # –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–¥–≤—ñ–π–Ω—ñ —Ç–µ–≥–∏ —Ç–∏–ø—É </b></b> -> </b>
    content = re.sub(r'(</)(\w+)(>)\2(>)', r'\1\2\3', content)
    
    # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ —Ç–µ–≥–∏ —â–æ –º—ñ—Å—Ç—è—Ç—å < –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ
    content = re.sub(r'<[^>]*<[^>]*>', '', content)
    
    # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ —Ç–µ–≥–∏
    content = re.sub(r'<(\w+)></\1>', '', content)
    
    # –†–∞—Ö—É—î–º–æ –≤—ñ–¥–∫—Ä–∏—Ç—ñ —Ç–∞ –∑–∞–∫—Ä–∏—Ç—ñ —Ç–µ–≥–∏
    open_tags = []
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Ç–µ–≥–∏
    tag_pattern = r'<(/?)(\w+)(?:\s[^>]*)?>'
    matches = list(re.finditer(tag_pattern, content))
    
    for match in matches:
        is_closing, tag_name = match.groups()
        
        if is_closing:
            # –ó–∞–∫—Ä–∏–≤–∞—é—á–∏–π —Ç–µ–≥ - –≤–∏–¥–∞–ª—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —Ç–µ–≥
            if open_tags and open_tags[-1] == tag_name:
                open_tags.pop()
        else:
            # –í—ñ–¥–∫—Ä–∏–≤–∞—é—á–∏–π —Ç–µ–≥ - –¥–æ–¥–∞—î–º–æ –≤ —Å—Ç–µ–∫
            open_tags.append(tag_name)
    
    # –î–æ–¥–∞—î–º–æ –∑–∞–∫—Ä–∏–≤–∞—é—á—ñ —Ç–µ–≥–∏ –¥–ª—è –Ω–µ–∑–∞–∫—Ä–∏—Ç–∏—Ö (–≤ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É)
    for tag_name in reversed(open_tags):
        content += f'</{tag_name}>'
        logging.warning(f"–î–æ–¥–∞–Ω–æ –∑–∞–∫—Ä–∏–≤–∞—é—á–∏–π —Ç–µ–≥ –¥–ª—è <{tag_name}>")
    
    # –û—Å—Ç–∞—Ç–æ—á–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –≤—ñ–¥ –±—É–¥—å-—è–∫–∏—Ö –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö —Ç–µ–≥—ñ–≤
    content = re.sub(r'<[^/>][^>]*[^/>]<', '<', content)
    
    return content

def remove_all_html_tags(content: str) -> str:
    """
    –í–∏–¥–∞–ª—è—î –≤—Å—ñ HTML —Ç–µ–≥–∏ –∑ —Ç–µ–∫—Å—Ç—É —è–∫ –∑–∞–ø–∞—Å–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
    """
    if not content:
        return content
    
    # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ HTML —Ç–µ–≥–∏
    content = re.sub(r'<[^>]+>', '', content)
    
    # –î–µ–∫–æ–¥—É—î–º–æ HTML entities
    content = content.replace('&lt;', '<').replace('&gt;', '>').replace('&amp;', '&')
    
    return content

SYSTEM_PROMPT = """
–¢–∏ ‚Äî –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π –µ–∫—Å–ø–µ—Ä—Ç –∑ —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∏—Ö –≥—Ä–∞—Ñ—ñ–∫—ñ–≤. –¢–≤–æ—è –º–µ—Ç–∞ ‚Äî –Ω–∞–¥–∞—Ç–∏ –≥–ª–∏–±–æ–∫–∏–π —Ç–∞ –æ–±'—î–∫—Ç–∏–≤–Ω–∏–π –∞–Ω–∞–ª—ñ–∑, –±–∞–∑—É—é—á–∏—Å—å –Ω–∞ –≤—ñ–∑—É–∞–ª—å–Ω—ñ–π —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑ –Ω–∞–¥–∞–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –¢–≤—ñ–π –∞–Ω–∞–ª—ñ–∑ –º–∞—î –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∏ –∫–æ–Ω—Ñ–ª—é–µ–Ω—Ü—ñ—ó —Å–∏–≥–Ω–∞–ª—ñ–≤ (–∑–±—ñ–≥ –∫—ñ–ª—å–∫–æ—Ö —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤/–ø–∞—Ç–µ—Ä–Ω—ñ–≤) —Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç–∞—Ä—à–∏—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º—ñ–≤. –¢–∏ –Ω–µ –¥–∞—î—à —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏—Ö –ø–æ—Ä–∞–¥.

–¢–≤–æ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ü–û–í–ò–ù–ù–ê –±—É—Ç–∏ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é HTML-—Ç–µ–≥—ñ–≤ –¥–ª—è Telegram. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π <b> –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É —Ç–∞ <code> –¥–ª—è –≤—Å—ñ—Ö —Ç–∏–∫–µ—Ä—ñ–≤ —Ç–∞ —á–∏—Å–ª–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å.

–í–ê–ñ–õ–ò–í–û: –ö–æ–∂–µ–Ω –≤—ñ–¥–∫—Ä–∏—Ç–∏–π HTML —Ç–µ–≥ –û–ë–û–í'–Ø–ó–ö–û–í–û –º–∞—î –±—É—Ç–∏ –∑–∞–∫—Ä–∏—Ç–∏–π. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: <b>—Ç–µ–∫—Å—Ç</b>, <code>–∑–Ω–∞—á–µ–Ω–Ω—è</code>. –ù–µ –∑–∞–ª–∏—à–∞–π –Ω–µ–∑–∞–∫—Ä–∏—Ç—ñ —Ç–µ–≥–∏!
–ó–ê–ë–û–†–û–ù–ï–ù–û: –ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ø–æ–¥–≤—ñ–π–Ω—ñ –∞–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Ç–µ–≥–∏ —Ç–∏–ø—É </b</b> –∞–±–æ </b></b>. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç—ñ–ª—å–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Ç–µ–≥–∏!

–û—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —è–∫–æ—ó —Ç–∏ –º–∞—î—à –°–£–í–û–†–û –¥–æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏—Å—è:

üìä <b>–¢–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –≥—Ä–∞—Ñ—ñ–∫–∞</b>

<b>–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:</b> <code>[–ù–∞–∑–≤–∞ –º–æ–Ω–µ—Ç–∏, —è–∫—â–æ –≤–∏–¥–Ω–æ]</code>
<b>–¢–∞–π–º—Ñ—Ä–µ–π–º:</b> <code>[–¢–∞–π–º—Ñ—Ä–µ–π–º, –≤–∏–¥–∏–º–∏–π –Ω–∞ –≥—Ä–∞—Ñ—ñ–∫—É, –Ω–∞–ø—Ä. H4, D1]</code>
<b>–û—Å–Ω–æ–≤–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π:</b> <code>[–ô–º–æ–≤—ñ—Ä–Ω–∏–π —Ä—É—Ö Long/Short]</code> [–î–æ–¥–∞–π –µ–º–æ–¥–∑—ñ üü¢ –¥–ª—è Long –∞–±–æ üî¥ –¥–ª—è Short]

‚ñ´Ô∏è <b>–ö–ª—é—á–æ–≤—ñ —Ä—ñ–≤–Ω—ñ –¥–ª—è –≤—Ö–æ–¥—É:</b> <code>[–¶—ñ–Ω–æ–≤–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω]</code>
‚ñ´Ô∏è <b>–†—ñ–≤–µ–Ω—å –¥–ª—è –æ–±–º–µ–∂–µ–Ω–Ω—è —Ä–∏–∑–∏–∫—É (Stop-Loss):</b> <code>[–¶—ñ–Ω–∞]</code>
‚ñ´Ô∏è <b>–°–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –†–∏–∑–∏–∫/–ü—Ä–∏–±—É—Ç–æ–∫ (RRR):</b> <code>[–ü—Ä–∏–±–ª–∏–∑–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è, –Ω–∞–ø—Ä. 1:3.5]</code>
‚ñ´Ô∏è <b>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–µ –ø–ª–µ—á–µ:</b> <code>[–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –¥–æ 5x]</code>

‚ñ´Ô∏è <b>–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ —Ü—ñ–ª—ñ (Take Profit):</b>

<code>[–ü–µ—Ä—à–∞ —Ü—ñ–ª—å]</code>

<code>[–î—Ä—É–≥–∞ —Ü—ñ–ª—å]</code>

<code>[–¢—Ä–µ—Ç—è —Ü—ñ–ª—å, —è–∫—â–æ –¥–æ—Ä–µ—á–Ω–æ]</code>

<blockquote expandable><b>üìà –î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑:</b>
<b>–ê—Ä–≥—É–º–µ–Ω—Ç–∏ –∑–∞ —Å—Ü–µ–Ω–∞—Ä—ñ–π:</b>
[–¢—É—Ç –æ–ø–∏—à–∏ –∑–±—ñ–≥ —Ñ–∞–∫—Ç–æ—Ä—ñ–≤ (–∫–æ–Ω—Ñ–ª—é–µ–Ω—Ü—ñ—é), —è–∫—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—é—Ç—å –æ—Å–Ω–æ–≤–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: "–¶—ñ–Ω–∞ —Å—Ñ–æ—Ä–º—É–≤–∞–ª–∞ –ø–∞—Ç–µ—Ä–Ω '–±–∏—á–∞—á–∏–π –ø—Ä–∞–ø–æ—Ä' –±—ñ–ª—è —Å–∏–ª—å–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ <code>[—Ü—ñ–Ω–∞]</code>. –î–æ–¥–∞—Ç–∫–æ–≤–æ, —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä RSI –ø–æ–∫–∞–∑—É—î –ø—Ä–∏—Ö–æ–≤–∞–Ω—É –±–∏—á–∞—á—É –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü—ñ—é, —â–æ –ø—ñ–¥—Å–∏–ª—é—î —Å–∏–≥–Ω–∞–ª –Ω–∞ —Ä—ñ—Å—Ç."]

<b>–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π:</b>
[–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏, —â–æ –º–æ–∂–µ –ø—ñ—Ç–∏ –Ω–µ —Ç–∞–∫ —ñ —â–æ –±—É–¥–µ —Å–∏–≥–Ω–∞–ª–æ–º –¥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —ñ–¥–µ—ó. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: "–°—Ü–µ–Ω–∞—Ä—ñ–π –±—É–¥–µ –Ω–µ–¥—ñ–π—Å–Ω–∏–º, —è–∫—â–æ —Ü—ñ–Ω–∞ –∑–∞–∫—Ä—ñ–ø–∏—Ç—å—Å—è –Ω–∏–∂—á–µ —Ä—ñ–≤–Ω—è <code>[—Ü—ñ–Ω–∞]</code>. –£ —Ç–∞–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É –º–æ–∂–ª–∏–≤–µ –ø–∞–¥—ñ–Ω–Ω—è –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –∑–æ–Ω–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≤ —Ä–∞–π–æ–Ω—ñ <code>[—Ü—ñ–Ω–∞]</code>."]</blockquote>

<blockquote expandable><b>‚ö†Ô∏è –í—ñ–¥–º–æ–≤–∞ –≤—ñ–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ:</b>
–¶—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —î –≤–∏–∫–ª—é—á–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö —ñ –Ω–µ —î —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—é –ø–æ—Ä–∞–¥–æ—é —á–∏ —Ç–æ—Ä–≥–æ–≤–æ—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—î—é. –í—Å—ñ —Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è –Ω–∞ –≤–∞—à –≤–ª–∞—Å–Ω–∏–π —Ä–∏–∑–∏–∫.</blockquote>

<blockquote expandable><b>‚öñÔ∏è –í–∞–∂–ª–∏–≤–æ –ø—Ä–æ –ø–ª–µ—á–µ:</b>
–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–µ –ø–ª–µ—á–µ –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ —Ç–µ—Ö–Ω—ñ—á–Ω–æ–º—É –∞–Ω–∞–ª—ñ–∑—ñ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ —Ä–∏–∑–∏–∫—É —É–≥–æ–¥–∏. –í–∏—Å–æ–∫–µ –ø–ª–µ—á–µ –∑–±—ñ–ª—å—à—É—î —è–∫ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫, —Ç–∞–∫ —ñ —Ä–∏–∑–∏–∫ –≤—Ç—Ä–∞—Ç. –ó–∞–≤–∂–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ Stop-Loss —Ç–∞ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ä–∏–∑–∏–∫–∞–º–∏.</blockquote>
"""

async def get_trade_recommendation(base64_image: str, mime_type: str = "image/jpeg") -> str:
    """
    –ê–Ω–∞–ª—ñ–∑—É—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é OpenAI GPT-4o —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—é.
    """
    try:
        client_instance = get_openai_client()
        response = await client_instance.chat.completions.create(
            model="gpt-4.1",
            messages=[
                {
                    "role": "system",
                    "content": SYSTEM_PROMPT
                },
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": "–ü—Ä–æ–≤–µ–¥–∏ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ –Ω–∏–∂—á–µ. –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫—É–π –ø–∞—Ç–µ—Ä–Ω–∏, –∫–ª—é—á–æ–≤—ñ —Ä—ñ–≤–Ω—ñ —Ç–∞ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π —Ä—É—Ö—É —Ü—ñ–Ω–∏. –°—Ñ–æ—Ä–º—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑–≥—ñ–¥–Ω–æ –∑ –Ω–∞–¥–∞–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é –≤ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è—Ö."},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:{mime_type};base64,{base64_image}",
                            },
                        },
                    ],
                }
            ],
            max_tokens=1500,
        )
        content = response.choices[0].message.content
        
        # –Ø–∫—â–æ OpenAI –≤—ñ–¥–º–æ–≤–ª—è—î—Ç—å—Å—è –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏
        if content and ("I'm sorry" in content or "can't help" in content or "I cannot" in content):
            return """‚ö†Ô∏è <b>–°–∏—Å—Ç–µ–º–∞ –Ω–µ –º–æ–∂–µ –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ü–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</b>

–ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:
‚ñ´Ô∏è –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —á—ñ—Ç–∫–∏–π –≥—Ä–∞—Ñ—ñ–∫
‚ñ´Ô∏è –ù–∏–∑—å–∫–∞ —è–∫—ñ—Å—Ç—å –∞–±–æ —Ä–æ–∑–º—ñ—Ä –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
‚ñ´Ô∏è –ù–µ–ø—Ä–∏–π–Ω—è—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É

üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:</b>
‚ñ´Ô∏è –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–∫—Ä—ñ–Ω—à–æ—Ç –≥—Ä–∞—Ñ—ñ–∫–∞ –∑ TradingView
‚ñ´Ô∏è –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ –≥—Ä–∞—Ñ—ñ–∫ —á—ñ—Ç–∫–∏–π —ñ —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π
‚ñ´Ô∏è –£–Ω–∏–∫–∞–π—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑ –æ—Å–æ–±–∏—Å—Ç–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é

–°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —ñ–Ω—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞."""
        
        # –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è HTML —Ç–µ–≥—ñ–≤
        if content:
            logging.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ OpenAI: {content[:200]}...")
            original_content = content
            
            try:
                # –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ HTML —Ç–µ–≥–∏
                content = fix_html_tags(content)
                if original_content != content:
                    logging.warning(f"HTML —Ç–µ–≥–∏ –±—É–ª–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—ñ")
                
                # –¢–µ—Å—Ç—É—î–º–æ —á–∏ –≤–∞–ª—ñ–¥–Ω–∏–π HTML
                import html
                html.escape(content)  # –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –Ω–∞ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å
                
                logging.info("HTML —Ç–µ–≥–∏ –≤–∞–ª—ñ–¥–æ–≤–∞–Ω–æ —Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ")
            except Exception as html_error:
                logging.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ HTML: {html_error}")
                # –Ø–∫—â–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–µ –¥–æ–ø–æ–º–æ–≥–ª–æ, –≤–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ HTML —Ç–µ–≥–∏
                content = remove_all_html_tags(original_content)
                logging.warning("HTML —Ç–µ–≥–∏ –≤–∏–¥–∞–ª–µ–Ω–æ –ø–æ–≤–Ω—ñ—Å—Ç—é")
        
        return content
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–ª–∏–∫—É OpenAI API: {e}")
        # –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –º—ñ—Å—Ç–∏—Ç—å –≤—ñ–¥–º–æ–≤—É, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
        if "I'm sorry" in str(e) or "can't help" in str(e):
            return "‚ö†Ô∏è OpenAI –≤—ñ–¥–º–æ–≤–∏–≤—Å—è –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –ú–æ–∂–ª–∏–≤–æ, –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å —Ç–æ—Ä–≥–æ–≤–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∞–±–æ –º–∞—î –Ω–µ–ø—Ä–∏–π–Ω—è—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —ñ–Ω—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞."
        # –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ HTML –ø–∞—Ä—Å–∏–Ω–≥—É
        if "can't parse entities" in str(e) or "can't find end tag" in str(e):
            return "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —â–µ —Ä–∞–∑."
        return "–ù–∞ –∂–∞–ª—å, –ø—ñ–¥ —á–∞—Å –∞–Ω–∞–ª—ñ–∑—É –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ, –±—É–¥—å –ª–∞—Å–∫–∞, –ø—ñ–∑–Ω—ñ—à–µ." 